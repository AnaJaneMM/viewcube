************
Introduction
************

`ViewCube [+SoniCube] <https://github.com/rgbIAA/viewcube>`_ is a lightweight, standalone 
application written entirely in Python, designed for the efficient exploration and browsing 
of datacubes. Originally developed for the quick assessment of the quality and physical 
characteristics of datacubes from the CALIFA survey, and for the rapid exploration of 
high-level data products generated by the PyCASSO pipeline 
(`de Amorim et al. 2017 <https://ui.adsabs.harvard.edu/abs/2017MNRAS.471.3727D/abstract>`_ ), 
ViewCubeâ€™s functionality has since expanded.

The application supports datacubes from (almost) any provenance, thanks to its general 
and flexible FITS reader. This reader is agnostic to the source of the datacubes, enabling 
it to handle a wide variety of datacubes from different instruments (e.g., MUSE) and surveys 
(e.g., MaNGA, CALIFA) across various wavelength ranges (optical, radio).

Furthermore, ``ViewCube`` can visualize Raw Stacked Spectra (RSS) if a fiber position table 
is provided, either specifying the HDU extension of a FITS file or in an external ASCII file.

In addition to offering intuitive visualization and interaction with datacubes and RSS files, 
the platform features a :ref:`Sonicube<Sonicube>` interface. This unique capability enables 
auditory exploration through `sonification <https://rgb.iaa.es/que-es-la-sonificacion/>`_, 
providing a novel dimension to data analysis.


^^^^^^^^^^^^
Installation
^^^^^^^^^^^^

To get started with `ViewCube <https://github.com/rgbIAA/viewcube>`_, follow these simple steps:

1. **Download**: Obtain the `ViewCube <https://github.com/rgbIAA/viewcube>`_ package by downloading 
   the `viewcube.zip` file from its GitHub repository:

    `https://github.com/rgbIAA/viewcube <https://github.com/rgbIAA/viewcube>`_

2. **Unzip**: Extract the contents of the downloaded zip file to your preferred location.
3. **Installation**: Navigate to the unzipped directory using the terminal, then execute the following command: 

    ``python setup.py install --user``

    The ``-- user`` (local) argument is optional.

4. Your (basic) installation is now complete!

To check the ```site-packages``` directory for a non-local Python installation, 
type the following command in the command line:

``python -m site``

Alternatively, if you want to see only the ``site-packages`` directory:

``python -c "import site; print(site.getsitepackages())"``


The installation should have placed the executable "ViewCube.py" file in your ``$PATH`` directory, 
making it accesible form any path.

You can check the actual location of the scrip via:

``which ViewCube.py``

^^^^^^^^^^^
Config file
^^^^^^^^^^^

The default installation places a hidden file named ".viewcuberc" at the user's local $HOME directory, 
tipically located at:

``$HOME/.viewcuberc``

Uncomment the relevant variable and assign it the desired parameter value.

If the file has not been created, you can generate a default configuration file by running:

``ViewCube.py --config-file``

This will create the configuration file (not hidden) in your current directory.

``ViewCube`` will attempt to read a configuration file from either ``$HOME/.viewcuberc`` or
the current directory (a non-hidden ``viewcuberc`` file, withoug ``.`` at the beginning).



